<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enum game_stage
{
    intro1 =0, //clicking white space
    intro2 = 1, // clicking black dot on white space
    actualGame =2,
    ending = 3
}

enum element_type
{
    none = -1,
    logic = 1,
    atomic_facts = 2,
    totality = 3,
    compound_facts =4,
    unexistance =5,
    reality=6,
    void =7,
    existance=8,
    object=9,
    negation=10,
    recursion=11,
    space=12,
    matter=13,
    subject=14,
    inception=15,
    infinity=16,
    things=17,
    blobs=18,
    _gravity=19,
    abstraction=20,
    time=21,
    mass=22,
    cascade=23,
    amplification=24,
    black_hole=25,
    paradox=26,
    destruction=27,
    impossibility=28,
    event_horizon=29,
    distortion=30,
    nullification=31,
    aether=32,
    singularity=33,
}

// if any of the elements is tracked by mouse
tracked = false
hovering_over = false

// keeps a list of elements on the screen
existing_elements = ds_list_create()

// 0 - output elem
// 1 - output elem main color
// 2 - input elem
// 3 - input elem
// 4 - input elem
elem_props = 7
total_elems = 33
starting_elements = 2
recipes = ds_grid_create(elem_props, total_elems - starting_elements)
unlocked_recipes = ds_list_create()

for (var i = 0; i &lt; total_elems; i++)
{
 unlocked_recipes[| i] = false;
}

for (var i = 0; i &lt; starting_elements; i++)
{
 unlocked_recipes[| i] = true;
}

for (var i = 0; i &lt; ds_grid_width(recipes); i++)
{
    for (var j = 0; j &lt; ds_grid_width(recipes); j++) 
    {
        ds_grid_set(recipes, i, j, 0)
    }
}

ds_grid_set(recipes, 0, 0, element_type.totality)
ds_grid_set(recipes, 1, 0, c_white)
ds_grid_set(recipes, 2, 0, element_type.logic)
ds_grid_set(recipes, 3, 0, element_type.atomic_facts)

ds_grid_set(recipes, 0, 1, element_type.compound_facts)
ds_grid_set(recipes, 1, 1, c_white)
ds_grid_set(recipes, 2, 1, element_type.atomic_facts)
ds_grid_set(recipes, 3, 1, element_type.atomic_facts)

ds_grid_set(recipes, 0, 2, element_type.unexistance)
ds_grid_set(recipes, 1, 2, c_white)
ds_grid_set(recipes, 2, 2, element_type.logic)
ds_grid_set(recipes, 3, 2, element_type.totality)

ds_grid_set(recipes, 0, 3, element_type.reality)
ds_grid_set(recipes, 1, 3, c_white)
ds_grid_set(recipes, 2, 3, element_type.totality)
ds_grid_set(recipes, 3, 3, element_type.compound_facts)

ds_grid_set(recipes, 0, 4, element_type.void)
ds_grid_set(recipes, 1, 4, c_white)
ds_grid_set(recipes, 2, 4, element_type.unexistance)
ds_grid_set(recipes, 3, 4, element_type.reality)

ds_grid_set(recipes, 0, 5, element_type.existance)
ds_grid_set(recipes, 1, 5, c_white)
ds_grid_set(recipes, 2, 5, element_type.unexistance)
ds_grid_set(recipes, 3, 5, element_type.logic)
ds_grid_set(recipes, 4, 5, element_type.reality)
ds_grid_set(recipes, 4, 5, element_type.void)

ds_grid_set(recipes, 0, 6, element_type.object)
ds_grid_set(recipes, 1, 6, c_white)
ds_grid_set(recipes, 2, 6, element_type.reality)
ds_grid_set(recipes, 3, 6, element_type.compound_facts)
ds_grid_set(recipes, 4, 6, element_type.existance)

ds_grid_set(recipes, 0, 7, element_type.negation)
ds_grid_set(recipes, 1, 7, c_white)
ds_grid_set(recipes, 2, 7, element_type.unexistance)
ds_grid_set(recipes, 3, 7, element_type.logic)
ds_grid_set(recipes, 4, 7, element_type.existance)

ds_grid_set(recipes, 0, 8, element_type.recursion)
ds_grid_set(recipes, 1, 8, c_white)
ds_grid_set(recipes, 2, 8, element_type.negation)
ds_grid_set(recipes, 3, 8, element_type.negation)
ds_grid_set(recipes, 4, 8, element_type.negation)

ds_grid_set(recipes, 0, 9, element_type.space)
ds_grid_set(recipes, 1, 9, c_white)
ds_grid_set(recipes, 2, 9, element_type.negation)
ds_grid_set(recipes, 3, 9, element_type.void)

ds_grid_set(recipes, 0, 10, element_type.matter)
ds_grid_set(recipes, 1, 10, c_white)
ds_grid_set(recipes, 2, 10, element_type.space)
ds_grid_set(recipes, 3, 10, element_type.totality)
ds_grid_set(recipes, 4, 10, element_type.object)

ds_grid_set(recipes, 0, 11, element_type.subject)
ds_grid_set(recipes, 1, 11, c_white)
ds_grid_set(recipes, 2, 11, element_type.object)
ds_grid_set(recipes, 3, 11, element_type.negation)
ds_grid_set(recipes, 4, 11, element_type.abstraction)

ds_grid_set(recipes, 0, 12, element_type.inception)
ds_grid_set(recipes, 1, 12, c_white)
ds_grid_set(recipes, 2, 12, element_type.recursion)
ds_grid_set(recipes, 3, 12, element_type.space)
ds_grid_set(recipes, 4, 12, element_type.subject)

ds_grid_set(recipes, 0, 13, element_type.infinity)
ds_grid_set(recipes, 1, 13, c_white)
ds_grid_set(recipes, 2, 13, element_type.unexistance)
ds_grid_set(recipes, 3, 13, element_type.existance)
ds_grid_set(recipes, 4, 13, element_type.inception)
ds_grid_set(recipes, 5, 13, element_type.logic)

ds_grid_set(recipes, 0, 14, element_type.things)
ds_grid_set(recipes, 1, 14, c_white)
ds_grid_set(recipes, 2, 14, element_type.matter)
ds_grid_set(recipes, 3, 14, element_type.object)

ds_grid_set(recipes, 0, 15, element_type.blobs)
ds_grid_set(recipes, 1, 15, c_white)
ds_grid_set(recipes, 2, 15, element_type.recursion)
ds_grid_set(recipes, 3, 15, element_type.things)

ds_grid_set(recipes, 0, 16, element_type._gravity)
ds_grid_set(recipes, 1, 16, c_white)
ds_grid_set(recipes, 2, 16, element_type.blobs)
ds_grid_set(recipes, 3, 16, element_type.reality)

ds_grid_set(recipes, 0, 17, element_type.abstraction)
ds_grid_set(recipes, 1, 17, c_white)
ds_grid_set(recipes, 2, 17, element_type.space)
ds_grid_set(recipes, 3, 17, element_type.reality)
ds_grid_set(recipes, 4, 17, element_type.time)

ds_grid_set(recipes, 0, 18, element_type.time)
ds_grid_set(recipes, 1, 18, c_white)
ds_grid_set(recipes, 2, 18, element_type.totality)
ds_grid_set(recipes, 3, 18, element_type.matter)
ds_grid_set(recipes, 4, 18, element_type.reality)

ds_grid_set(recipes, 0, 19, element_type.mass)
ds_grid_set(recipes, 1, 19, c_white)
ds_grid_set(recipes, 2, 19, element_type.matter)
ds_grid_set(recipes, 3, 19, element_type._gravity)

ds_grid_set(recipes, 0, 20, element_type.cascade)
ds_grid_set(recipes, 1, 20, c_white)
ds_grid_set(recipes, 2, 20, element_type.space)
ds_grid_set(recipes, 3, 20, element_type.void)
ds_grid_set(recipes, 4, 20, element_type.inception)

ds_grid_set(recipes, 0, 21, element_type.amplification)
ds_grid_set(recipes, 1, 21, c_white)
ds_grid_set(recipes, 2, 21, element_type.cascade)
ds_grid_set(recipes, 3, 21, element_type.infinity)

ds_grid_set(recipes, 0, 22, element_type.black_hole)
ds_grid_set(recipes, 1, 22, c_white)
ds_grid_set(recipes, 2, 22, element_type.time)
ds_grid_set(recipes, 3, 22, element_type.mass)
ds_grid_set(recipes, 4, 22, element_type._gravity)

ds_grid_set(recipes, 0, 23, element_type.paradox)
ds_grid_set(recipes, 1, 23, c_white)
ds_grid_set(recipes, 2, 23, element_type.black_hole)
ds_grid_set(recipes, 3, 23, element_type.cascade)
ds_grid_set(recipes, 4, 23, element_type.abstraction)

ds_grid_set(recipes, 0, 24, element_type.destruction)
ds_grid_set(recipes, 1, 24, c_white)
ds_grid_set(recipes, 2, 24, element_type.reality)
ds_grid_set(recipes, 3, 24, element_type.black_hole)
ds_grid_set(recipes, 4, 24, element_type.totality)

ds_grid_set(recipes, 0, 25, element_type.impossibility)
ds_grid_set(recipes, 1, 25, c_white)
ds_grid_set(recipes, 2, 25, element_type.time)
ds_grid_set(recipes, 3, 25, element_type.logic)
ds_grid_set(recipes, 4, 25, element_type.paradox)

ds_grid_set(recipes, 0, 26, element_type.event_horizon)
ds_grid_set(recipes, 1, 26, c_white)
ds_grid_set(recipes, 2, 26, element_type.black_hole)
ds_grid_set(recipes, 3, 26, element_type.paradox)
ds_grid_set(recipes, 4, 26, element_type.infinity)

ds_grid_set(recipes, 0, 27, element_type.distortion)
ds_grid_set(recipes, 1, 27, c_white)
ds_grid_set(recipes, 2, 27, element_type.matter)
ds_grid_set(recipes, 3, 27, element_type.amplification)
ds_grid_set(recipes, 4, 27, element_type.impossibility)

ds_grid_set(recipes, 0, 28, element_type.nullification)
ds_grid_set(recipes, 1, 28, c_white)
ds_grid_set(recipes, 2, 28, element_type.destruction)
ds_grid_set(recipes, 3, 28, element_type.abstraction)
ds_grid_set(recipes, 4, 28, element_type.amplification)

ds_grid_set(recipes, 0, 29, element_type.aether)
ds_grid_set(recipes, 1, 29, c_white)
ds_grid_set(recipes, 2, 29, element_type.void)
ds_grid_set(recipes, 3, 29, element_type.abstraction)
ds_grid_set(recipes, 4, 29, element_type.nullification)
ds_grid_set(recipes, 5, 29, element_type.logic)

ds_grid_set(recipes, 0, 30, element_type.singularity)
ds_grid_set(recipes, 1, 30, c_white)
ds_grid_set(recipes, 2, 30, element_type.aether)
ds_grid_set(recipes, 3, 30, element_type.distortion)
ds_grid_set(recipes, 4, 30, element_type.event_horizon)
ds_grid_set(recipes, 5, 30, element_type.amplification)




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(existing_elements)
ds_list_destroy(unlocked_recipes)
ds_grid_destroy(recipes)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
