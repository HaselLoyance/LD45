<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprElementMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>destroy_thingy = false
scrap = false

ds_list_add(data.existing_elements, id)
incShake = 0
create_scale = 0
type = -1
tracked = false
color = c_white
scale_flag = false
maxSpeed = 20
slowdown = false
dec = 3
followToX = 0
followToY = 0
doing_banding = false
lock_interaction = false
death_anim = false
tracking_scale = 0.4
hpadding = 28
vpadding = 12
x1 = 0
y1 = 0
x2 = 0
y2 = 0
disable_rubber = false

smooth_expand = false
smooth_shrink = false
t_1 = 0
extra_scale = 0

forceLock = false
alph = 1
t = 0
lastT = 0
drawHintCircle = false
hintCircleRadius = 1
origX = 0
origY =0
preX = 0
preY = 0


ps = part_system_create()
emit = part_emitter_create(ps);

particle = part_type_create();
part_type_shape(particle,pt_shape_disk);
part_type_size(particle,0.25,0.50,-0.01,0);
part_type_scale(particle,1,1);
part_type_color1(particle,16777215);
part_type_alpha1(particle,1);
part_type_speed(particle,1,1.50,0,0);
part_type_direction(particle,0,359,0,0);
part_type_blend(particle,1);
part_type_life(particle,60,60);

part_emitter_stream(ps,emit,particle,0);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// remove element
if tracked
data.tracked = false

part_emitter_destroy(ps, emit)
part_system_destroy(ps)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>disable_rubber = false

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>lock_interaction = false

/*
elem = instance_create(x,y + 150, objElement)
elem.type = 33
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (destroy_thingy)
{
y = origY + random_range(-3 -incShake,3 + incShake)
x = origX + random_range(-3 -incShake,3+ incShake)

incShake +=0.045
if (incShake &gt; 12)
{
    destroy_thingy = false
    explode = instance_create(objCrucible.x, objCrucible.y, objExplodeEnd)
    objInit.play_sounds = false
}
}

if forceLock || destroy_thingy || scrap
{
exit
}


if (create_scale &gt; 0)
{
create_scale -=0.02
if(create_scale &lt;= 0)
{
create_scale = 0
part_emitter_stream(ps,emit,particle,0);
}
}

part_emitter_region(ps,emit,x -7,x + 7,y-7,y+7,0,0);

t+=1

var mouse_in = point_in_rectangle(mouse_x, mouse_y, x1, y1, x2, y2)

if (data.hovering_over != id &amp;&amp; mouse_in) || tracked 
{
data.hovering_over = id
smooth_expand = true
smooth_shrink = false
}else if (!mouse_in)
{
smooth_shrink = true
smooth_expand = false
}

if smooth_expand &amp;&amp; extra_scale + 0.08 &lt; tracking_scale
{
    extra_scale += 0.08
    if extra_scale + 0.08 &gt; tracking_scale
       extra_scale = tracking_scale
}

if smooth_shrink &amp;&amp; extra_scale - 0.08 &gt; 0
{
    extra_scale -= 0.08
    
    if extra_scale - 0.08 &lt; 0
       extra_scale = 0
}

if mouse_in
{
data.hovering_over = id
}

tee = scrCountElementsOfType(type)

if ( !doing_banding &amp;&amp; !tracked &amp;&amp; !disable_rubber &amp;&amp; 
(!point_in_rectangle(x, y, view_xview[0], view_yview[0], view_xview[0] + view_wview[0], view_yview[0] + view_hview[0])))
{
direction = point_direction(x, y, room_width / 2, room_height / 2)

/*
edgeDist = min(
point_distance(x, y, view_xview[0] + view_wview[0] / 2, view_yview[0]),
point_distance(x, y, view_xview[0] + view_wview[0] / 2, view_yview[0] + view_hview[0]),
point_distance(x, y, view_xview[0], view_yview[0] + view_hview[0] / 2),
point_distance(x, y, view_xview[0] + view_wview[0], view_yview[0] + view_hview[0] / 2)
)*/

//dist = point_distance(x, y, room_width / 2, room_height / 2) - edgeDist

dist = point_distance(x, y, room_width / 2, room_height / 2)

speed = min(power((dist / 170), 2), maxSpeed * 3)
doing_banding = true
friction = 1

}

if doing_banding &amp;&amp; (speed &lt; 1)
{
speed = 0
doing_banding = false
}
/*
if (doing_banding &amp;&amp; point_in_rectangle(x, y, view_xview[0], view_yview[0], view_xview[0] + view_wview[0], view_yview[0] + view_hview[0]))
{
friction = 2.5


}
*/


if mouse_check_button_pressed(mb_left) &amp;&amp; !tracked &amp;&amp; !lock_interaction &amp;&amp; !data.tracked &amp;&amp; mouse_in
{
/*
    show_debug_message("click")
    show_debug_message("pre: " + string(preX) + " " + string(preY))
    show_debug_message("point: " + string( point_in_rectangle(preX, preY, x1 + (y2 - y1), y1, x2 - (y2 - y1),y2)))
    show_debug_message("x1: " + string(x1 + (y2 - y1)) + ", y1: " + string(y1) + ", x2: " + string(x2 - (y2 - y1)) + ", y2: " + string(y2))
    */
    if  type != 33 &amp;&amp; t - lastT &lt; 15 &amp;&amp; point_in_rectangle(preX, preY, x1 + (y2 - y1)*0.6, y1, x2 - (y2 - y1) * 0.6,y2) &amp;&amp; tee &lt; 4
    {
    show_debug_message("duplicate")
    audio_play_sound(sound0, 0 ,false);
        duplicate = instance_create(x, y,objElement)
        with duplicate
        {
            type = other.type
            color = other.color
            speed = 7
            friction = 0.3
            direction = random(360)
            lock_interaction = true
            alarm[0] = 20
        }
    }
    else
    {
audio_play_sound(sound11, 0, false)
    event_user(1)
    }

preX = x;
preY = y
lastT = t
}
else if (tracked &amp;&amp; !lock_interaction &amp;&amp; mouse_check_button_released(mb_left))
{


audio_play_sound(sound15, 0, false)
if t - lastT &gt; 30 &amp;&amp; point_in_rectangle(preX, preY, x1 + (y2 - y1)*0.6, y1, x2 - (y2 - y1)*0.6,y2) &amp;&amp;  tee &gt; 1
{
    lock_interaction = true
    death_anim = true
    data.tracked = false
    tracked = false
    
audio_play_sound(death3, 0, false)
    event_user(0)
}else
{

event_user(2)
}
}

if t - lastT &gt; 30 &amp;&amp; tracked &amp;&amp; point_in_rectangle(preX, preY, x1 + (y2 - y1)*0.6, y1, x2 - (y2 - y1)*0.6,y2) &amp;&amp;  tee &gt; 1 &amp;&amp; !ready_for_delete
{
    ready_for_delete = true;
    origX = x;
    origY = y;
}
else if !(t - lastT &gt; 30 &amp;&amp; tracked &amp;&amp; point_in_rectangle(preX, preY, x1 + (y2 - y1)*0.6, y1, x2 - (y2 - y1)*0.6,y2) &amp;&amp;  tee &gt; 1 &amp;&amp; !ready_for_delete)
{
    ready_for_delete = false;
}

if (slowdown &amp;&amp; !doing_banding)
{
direction = point_direction(x, y, followToX,followToY)
dist = point_distance(x, y, followToX,followToY)

speed = max(speed - dec, 0)
  if (speed &lt; 1)
  {
    speed = 0
    slowdown = false
  }
}

if (tracked &amp;&amp; !lock_interaction)
{
direction = point_direction(x, y, mouse_x, mouse_y)
dist = point_distance(x, y, mouse_x, mouse_y)

speed = min(power((dist / 20), 2), maxSpeed)
}




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


if forceLock
exit

if drawHintCircle
{
hintCircleRadius += 0.15 * hintCircleRadius
if hintCircleRadius &gt; 100
{
if !audio_is_playing(hint)
   audio_play_sound(hint, 0 ,false)
hintCircleRadius = 1
    drawHintCircle = false
}
}


if death_anim
{

y = origY + random_range(-5,5)
x = origX + random_range(-5,5)

alph -= 0.03
if alph &lt;= 0 instance_destroy()


}else if (ready_for_delete)
{

y = origY + random_range(-3,3)
x = origX + random_range(-3,3)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if scrap &amp;&amp; point_distance(x, y, objCrucible.x, objCrucible.y) &lt; 1000
{
event_user(0)
instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>create_scale = 0.7

part_emitter_stream(ps,emit,particle,3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drawHintCircle = true
show_debug_message("hinting: " + scrGetElementTypeStr(type))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// force stop tracking
tracked = false;
data.tracked = false
slowdown = false
followToX = x
followToY = y
speed = 0
direction = 0
friction = 0

part_emitter_stream(ps,emit,particle,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///smooth stop tracking
   tracked = false;
   data.tracked = false
   slowdown = true
   followToX = mouse_x
   followToY = mouse_y
   
   
part_emitter_stream(ps,emit,particle,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// begin tracking
   tracked = true
   data.tracked = true
   slowdown = false
   doing_banding = false
   speed = 0
   friction = 0
   direction = 0

part_emitter_stream(ps,emit,particle,3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//pre destroy
ds_list_delete(data.existing_elements, ds_list_find_index(data.existing_elements, id))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_self()

draw_set_halign(fa_center)
draw_set_valign(fa_middle)
draw_set_font(elementFont2)
draw_set_color(color)
draw_set_alpha(alph)


str = scrGetElementTypeStr(type)
szh = string_width(str)
szv = string_height(str)

if (type == 33)
{
    extra_scale = 0.1 * (sin(t/ 10) + 1)   
}

final_scale = 1 + extra_scale +create_scale



x1 = x - szh / 2 - hpadding * final_scale
y1 = y - szv / 2 - vpadding * final_scale
x2 =x + szh / 2 + hpadding * final_scale
y2 =y + szv / 2 + vpadding * final_scale

draw_set_color(c_black)
draw_rectangle(x1, y1, x2, y2, false)

draw_set_color(color)
//if (str == "Logic" || str == "Atomic Fact" || str == "Singularity")
   draw_text_transformed(x,y,str, final_scale, final_scale, 0)

draw_sprite_ext(sprElementBling, 0, x, y, 1.5, 1.9, 0, color, 0.2)
scrDrawRectWidth(x1, y1, x2, y2, 5)

if drawHintCircle
   draw_circle(x,y, hintCircleRadius, true)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
