<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playonce = false
play_sounds = false

audio_play_sound(introMusic, 0, true)
audio_sound_gain(introMusic, 0, 0)
audio_sound_gain(introMusic, 0.7, 250)
//stage = data.game_stage.actualGame
stage = 0
stage_1_setup_good = false
stage_2_setup_good = false
stage_3_setup_good = false
stage_4_setup_good = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(speedup,0, false)
audio_sound_gain(explosion, 0.5, 500)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cr1 = instance_create(room_width /2, room_height / 2 - 1000, objCrucible);

cr1.endAt = room_height / 2

with cr1 event_user(0)

audio_play_sound(musMain, 0, true)
audio_sound_gain(musMain, 0, 0)
audio_sound_gain(musMain, 0.3, 1500)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
rand = instance_create(objCrucible.x, objCrucible.y, objElement)

with rand
{
    type = irandom_range(1, 33)
        direction = random(360)
    speed = random_range(30,60)
    disable_rubber = true
    scrap = true
    lock_interaction = true
}


alarm[1] = 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!playonce)
{
with(objElement)
{

 if type == 33
 {
 origX = x
 origY = y
    destroy_thingy = true
 }
 else
 {
         direction = point_direction(x,y, room_width/2, room_height /2) + 180
        
        speed = random_range(2,4)
        friction = -1
        
 }
}
playonce = true
play_sounds = true
}

audio_sound_gain(musMain, 0, 250)

alarm[3] = 60
alarm[1] = 120
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if play_sounds
{
if !audio_is_playing(explosion)
{
audio_sound_pitch(explosion, random_range(0.8,1.2))
audio_play_sound(explosion, 0, false)
}
}

if stage == 0 &amp;&amp; !stage_1_setup_good
{
background_color = make_colour_rgb(240,240,240);

introcircle = instance_create(room_width / 2, room_height / 2, objIntro1Circle)

stage_1_setup_good = true;
}

if stage == 1 &amp;&amp; !stage_2_setup_good
{

background_color = make_colour_rgb(240,240,240);

if !instance_exists(objIntro1Circle)
{   introcircle = instance_create(room_width / 2, room_height / 2, objIntro1Circle)
    introcircle.expand_some = true
}
stage_2_setup_good = true;

}

if stage == 2 &amp;&amp; !stage_3_setup_good
{
audio_sound_gain(introMusic, 0, 1000)

instance_create(room_width / 2, room_height / 2, objgrad)
background_colour = c_black;

alarm[2] = 60

stage_3_setup_good = true;
}

if stage == 3 &amp;&amp; !stage_4_setup_good
{
    with objElement
    {

        forceLock = true
        scrap = true
        
    friction = 0
    speed = 0
    }
    audio_play_sound(memedeath,0,false)
    alarm[0] = 60
    stage_4_setup_good = true
}


if (data.tracked)
{
if !audio_is_playing(sound17)
   audio_play_sound(sound17, 0, true)
}else
{

if audio_is_playing(sound17)
   audio_stop_sound(sound17)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>exit

height_to_display -= 20
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>exit

height_to_display += 20
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
